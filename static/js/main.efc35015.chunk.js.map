{"version":3,"sources":["components/Layout/Header.js","context.js","components/Contacts/Contact.js","components/Contacts/Contacts.js","components/Layout/TextInputGroup.js","components/Contacts/AddContact.js","components/Contacts/EditContact.js","pages/About.js","pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","className","href","to","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","fetch","then","res","json","data","value","this","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","method","name","email","phone","style","cursor","onClick","float","color","bind","marginRight","Contacts","key","TextInputGroup","placeholder","label","onChange","error","htmlFor","defaultProps","AddContact","errors","e","target","onSubmit","newContact","headers","body","JSON","stringify","console","log","history","push","updContact","match","params","About","NotFound","App","exact","path","component","EditContact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.efc35015.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Header(props) {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-secondary navbar-nav py-0 mb-5\">\r\n      <div className=\"container\">\r\n        <a\r\n          href=\"https://igornep.github.io/contactmanager/\"\r\n          className=\"navbar-brand\"\r\n        >\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fa fa-home\"></i>\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fa fa-plus\"></i>\r\n                Add Contact\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fa fa-question\"></i>\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(\r\n          (contact) =>\r\n            (contact =\r\n              contact.id === action.payload.id ? action.payload : contact)\r\n        ),\r\n      };\r\n    default:\r\n      return {\r\n        state,\r\n      };\r\n  }\r\n};\r\n\r\nexport default class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: (action) => this.setState((state) => reducer(state, action)),\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({ contacts: data });\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Contact extends Component {\r\n  state = {\r\n    showContactInfo: false,\r\n  };\r\n  onDeleteClick = (dispatch, id) => {\r\n    fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\r\n      method: \"DELETE\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n      });\r\n  };\r\n  render() {\r\n    const { name, email, phone, id } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h2>\r\n                {name}\r\n                <i\r\n                  className=\"fa fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() =>\r\n                    this.setState({ showContactInfo: !showContactInfo })\r\n                  }\r\n                ></i>\r\n                <i\r\n                  className=\"fa fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, dispatch, id)}\r\n                ></i>\r\n                <Link to={`/contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fa fa-pencil\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      color: \"black\",\r\n                      float: \"right\",\r\n                      marginRight: \"10px\",\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </h2>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email:{email}</li>\r\n                  <li className=\"list-group-item\">Phone:{phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport Contact from \"./Contact\";\r\n\r\nexport default class Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { contacts } = value;\r\n          return contacts.map((contact) => (\r\n            <Contact key={contact.id} contact={contact} />\r\n          ));\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function TextInputGroup({\r\n  placeholder,\r\n  label,\r\n  name,\r\n  value,\r\n  onChange,\r\n  type,\r\n  error,\r\n}) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        placeholder={placeholder}\r\n        className=\"form-control\"\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        error={error}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\",\r\n};\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport TextInputGroup from \"../Layout/TextInputGroup\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nexport default class AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  onSubmit = (dispatch) => {\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n    fetch(`https://jsonplaceholder.typicode.com/users`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-type\": \"Application/json\" },\r\n      body: JSON.stringify(newContact),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        dispatch({ type: \"ADD_CONTACT\", payload: data });\r\n      });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    placeholder=\"Enter name\"\r\n                    label=\"Name\"\r\n                    value={name}\r\n                    name=\"name\"\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    placeholder=\"Enter email\"\r\n                    label=\"Email\"\r\n                    value={email}\r\n                    name=\"email\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    placeholder=\"Enter phone\"\r\n                    label=\"Phone\"\r\n                    value={phone}\r\n                    name=\"phone\"\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn bg-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TextInputGroup from \"../Layout/TextInputGroup\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nexport default class AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    fetch(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          name: data.name,\r\n          email: data.email,\r\n          phone: data.phone,\r\n        });\r\n      });\r\n  }\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  onSubmit = (dispatch) => {\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n    const { id } = this.props.match.params;\r\n    fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-type\": \"application/json\" },\r\n      body: JSON.stringify(updContact),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        dispatch({ type: \"UPDATE_CONTACT\", payload: data });\r\n      });\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    placeholder=\"Enter name\"\r\n                    label=\"Name\"\r\n                    value={name}\r\n                    name=\"name\"\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    placeholder=\"Enter email\"\r\n                    label=\"Email\"\r\n                    value={email}\r\n                    name=\"email\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    placeholder=\"Enter phone\"\r\n                    label=\"Phone\"\r\n                    value={phone}\r\n                    name=\"phone\"\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Edit Contact\"\r\n                    className=\"btn bg-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h2>About</h2>\r\n      <p>Simple application for contact managment</p>\r\n      <p>version 0.0.1</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h2>\r\n        <span className=\"text-danger\">404</span>Not Found\r\n      </h2>\r\n      <p>Sorry, that page doesnot exist</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport Header from \"./components/Layout/Header\";\nimport Provider from \"./context\";\nimport Contacts from \"./components/Contacts/Contacts\";\nimport AddContact from \"./components/Contacts/AddContact\";\nimport EditContact from \"./components/Contacts/EditContact\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport About from \"./pages/About\";\nimport NotFound from \"./pages/NotFound\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div>\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}